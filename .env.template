# RAG Evaluation System Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# LLM API KEYS
# =============================================================================

# OpenAI API Key (for GPT models)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key (for Claude models)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Groq API Key (for fast inference)
GROQ_API_KEY=your_groq_api_key_here

# =============================================================================
# VECTOR DATABASE CONNECTIONS
# =============================================================================

# MongoDB Atlas (with Vector Search)
MONGODB_URI=your_mongodb_uri_with_cluster

# AstraDB (Cassandra-based vector database)
ASTRADB_TOKEN=your_astradb_token_here
ASTRADB_API_ENDPOINT=your_astradb_endpoint_here

# OpenSearch (can be AWS OpenSearch or self-hosted)
OPENSEARCH_HOST=https://localhost  # Note: https instead of http
OPENSEARCH_PORT=9200
OPENSEARCH_USERNAME=admin
OPENSEARCH_PASSWORD=yourStrongPassword123  # From the docker logs
OPENSEARCH_USE_SSL=false
OPENSEARCH_VERIFY_CERTS=false

# Milvus (can be Zilliz Cloud or self-hosted)
MILVUS_HOST=your_milvus_host_here
MILVUS_USERNAME=your_milvus_username_here
MILVUS_PASSWORD=your_milvus_password_here

# Qdrant
QDRANT_HOST=localhost
QDRANT_PORT=6333

# =============================================================================
# OPTIONAL: HUGGING FACE (for models and datasets)
# =============================================================================

# Hugging Face API Token (optional, for private models or increased rate limits)
HUGGINGFACE_TOKEN=your_huggingface_token__here

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Environment (development, testing, production)
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG=true

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# DATABASE SETUP INSTRUCTIONS
# =============================================================================

# MongoDB Atlas Vector Search:
# 1. Create MongoDB Atlas cluster
# 2. Enable Vector Search on your cluster
# 3. Get connection string and replace above

# AstraDB:
# 1. Create account at astra.datastax.com
# 2. Create vector database
# 3. Get token and API endpoint from settings

# OpenSearch:
# 1. Option A: Use AWS OpenSearch Service
# 2. Option B: Self-host using Docker:
#    docker run -p 9200:9200 -e "discovery.type=single-node" opensearchproject/opensearch:latest

# Milvus:
# 1. Option A: Use Zilliz Cloud (managed Milvus)
# 2. Option B: Self-host using Docker:
#    docker run -p 19530:19530 milvusdb/milvus:latest

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit the actual .env file to version control
# - Use strong, unique passwords for all services
# - Consider using environment-specific API keys (dev/prod)
# - Regularly rotate API keys and passwords
# - Use IAM roles instead of keys where possible (AWS)
